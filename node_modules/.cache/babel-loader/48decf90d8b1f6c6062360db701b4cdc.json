{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/audio/index.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/audio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Audio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canplay = () => {\n      this.audio.current.oncanplay = () => {\n        var totalTime = (Math.floor(this.audio.current.duration / 60) + \"\").padStart(2, \"0\") + \":\" + (Math.floor(this.audio.current.duration % 60) + \"\").padStart(2, \"0\");\n        this.setState({\n          totalTime\n        });\n      };\n    };\n\n    this.timeUpdate = () => {\n      this.audio.current.ontimeupdate = () => {\n        var currentTime = (Math.floor(this.audio.current.currentTime / 60) + \"\").padStart(2, \"0\") + \":\" + (Math.floor(this.audio.current.currentTime % 60) + \"\").padStart(2, \"0\");\n        this.setState({\n          currentTime: currentTime\n        });\n        this.inner.current.style.width = this.audio.current.currentTime / this.audio.current.duration * 100 + \"%\";\n      };\n    };\n\n    this.audioPlay = () => {\n      this.setState({\n        isPlay: true\n      });\n      this.audio.current.play();\n    };\n\n    this.audioStop = () => {\n      this.setState({\n        isPlay: false\n      });\n      this.audio.current.pause();\n    };\n\n    this.audioX = e => {\n      console.log('鼠标到可视区左侧的距离', e.targetTouches[0].clientX);\n      var outerWidth = this.outer.current.offsetWidth; //父元素宽\n\n      var innerWidth = e.targetTouches[0].clientX - this.outer.current.getBoundingClientRect().left; //鼠标到左侧的距离\n\n      if (innerWidth > outerWidth || innerWidth < 0) {\n        return;\n      }\n\n      this.inner.current.style.width = innerWidth + \"px\";\n      this.audio.current.currentTime = innerWidth / outerWidth * this.audio.current.duration;\n    };\n\n    this.handleAudio = () => {\n      let audio = this.audio.current; // timeupdate,播放位置改变时触发\n\n      audio.addEventListener(\"timeupdate\", () => {\n        console.log(\"播放位置改变\");\n      }); // canplay,表示音频可以播放了，准备就绪\n\n      audio.addEventListener(\"canplay\", () => {\n        console.log(\"可以播放了\");\n      }); // progress，音频在加载或缓冲\n\n      audio.addEventListener(\"progress\", () => {\n        console.log(\"音频在加载或缓冲\");\n      }); // waiting,需要缓冲下一帧而停止播放时触发\n\n      audio.addEventListener(\"waiting\", () => {\n        console.log(\"需要缓冲下一帧\");\n      }); // playing,音频或视频已开始播放时触发\n\n      audio.addEventListener(\"playing\", () => {\n        console.log(\"开始播放\");\n      }); // pause,音频或视频文件暂停时触发\n\n      audio.addEventListener(\"pause\", () => {\n        console.log(\"已经暂停\");\n      });\n    };\n\n    this.state = {\n      url: this.props.audioUrl,\n      currentTime: \"00:00\",\n      totalTime: \"00:00\",\n      isPlay: false\n    };\n    this.outer = /*#__PURE__*/React.createRef(); //自定义进度条外框\n\n    this.inner = /*#__PURE__*/React.createRef(); //自定义进度条内核\n\n    this.audio = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.canplay();\n    this.timeUpdate();\n    this.handleAudio();\n  } //在音频可以播放时就显示总时长\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer\",\n        ref: this.outer,\n        onTouchMove: e => this.audioX(e),\n        onTouchStart: e => this.audioX(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          ref: this.inner,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"innerBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.totalTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: this.audio,\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-btn\",\n        children: !this.state.isPlay ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont icon-bofang\",\n          onClick: () => this.audioPlay()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont icon-zanting\",\n          onClick: () => this.audioStop()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/audio/index.js"],"names":["React","Component","Audio","constructor","props","canplay","audio","current","oncanplay","totalTime","Math","floor","duration","padStart","setState","timeUpdate","ontimeupdate","currentTime","inner","style","width","audioPlay","isPlay","play","audioStop","pause","audioX","e","console","log","targetTouches","clientX","outerWidth","outer","offsetWidth","innerWidth","getBoundingClientRect","left","handleAudio","addEventListener","state","url","audioUrl","createRef","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/audio.css'\n\nclass Audio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: this.props.audioUrl,\n            currentTime: \"00:00\",\n            totalTime: \"00:00\",\n            isPlay: false\n        };\n        this.outer = React.createRef(); //自定义进度条外框\n        this.inner = React.createRef(); //自定义进度条内核\n        this.audio = React.createRef();\n    }\n\n    componentDidMount() {\n        this.canplay();\n        this.timeUpdate();\n        this.handleAudio();\n    }\n\n    //在音频可以播放时就显示总时长\n    canplay = () => {\n        this.audio.current.oncanplay = () => {\n            var totalTime =\n                (Math.floor(this.audio.current.duration / 60) + \"\").padStart(2, \"0\") +\n                \":\" +\n                (Math.floor(this.audio.current.duration % 60) + \"\").padStart(2, \"0\");\n            this.setState({\n                totalTime\n            });\n        };\n    }\n\n\n    //在音频播放时当前时间也跟着变化\n    timeUpdate = () => {\n        this.audio.current.ontimeupdate = () => {\n            var currentTime =\n                (Math.floor(this.audio.current.currentTime / 60) + \"\").padStart(2, \"0\")\n                + \":\" +\n                (Math.floor(this.audio.current.currentTime % 60) + \"\").padStart(2, \"0\");\n            this.setState({\n                currentTime: currentTime\n            });\n            this.inner.current.style.width =\n                (this.audio.current.currentTime / this.audio.current.duration) * 100 +\n                \"%\";\n        };\n    }\n\n    //播放开始\n    audioPlay = () => {\n        this.setState({\n            isPlay: true\n        })\n        this.audio.current.play();\n    }\n\n    //播放暂停\n    audioStop = () => {\n        this.setState({\n            isPlay: false\n        })\n        this.audio.current.pause();\n    }\n\n\n    //设置播放进度\n    audioX = (e) => {\n        console.log('鼠标到可视区左侧的距离', e.targetTouches[0].clientX);\n        var outerWidth = this.outer.current.offsetWidth; //父元素宽\n        var innerWidth = e.targetTouches[0].clientX -  this.outer.current.getBoundingClientRect().left\n        //鼠标到左侧的距离\n        if (innerWidth > outerWidth || innerWidth < 0) {\n            return;\n        }\n        this.inner.current.style.width = innerWidth + \"px\";\n        this.audio.current.currentTime =\n            (innerWidth / outerWidth) * this.audio.current.duration;\n    }\n\n    handleAudio = () => {\n        let audio = this.audio.current;\n        // timeupdate,播放位置改变时触发\n        audio.addEventListener(\"timeupdate\", () => {\n            console.log(\"播放位置改变\");\n        });\n        // canplay,表示音频可以播放了，准备就绪\n        audio.addEventListener(\"canplay\", () => {\n            console.log(\"可以播放了\");\n        });\n        // progress，音频在加载或缓冲\n        audio.addEventListener(\"progress\", () => {\n            console.log(\"音频在加载或缓冲\");\n        });\n        // waiting,需要缓冲下一帧而停止播放时触发\n        audio.addEventListener(\"waiting\", () => {\n            console.log(\"需要缓冲下一帧\");\n        });\n        // playing,音频或视频已开始播放时触发\n        audio.addEventListener(\"playing\", () => {\n            console.log(\"开始播放\");\n        });\n        // pause,音频或视频文件暂停时触发\n        audio.addEventListener(\"pause\", () => {\n            console.log(\"已经暂停\");\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"audio\">\n                <span>{this.state.currentTime}</span>\n                <div\n                    className=\"outer\"\n                    ref={this.outer}\n                    onTouchMove={e => this.audioX(e)}\n                    onTouchStart={e => this.audioX(e)}\n                >\n                    <div className=\"inner\" ref={this.inner}>\n                        <div className=\"innerBtn\"></div>\n                    </div>\n                </div>\n                <span>{this.state.totalTime}</span>\n                <audio\n                    ref={this.audio}\n                    src={url}\n                ></audio>\n                <div className=\"audio-btn\">\n                    {!this.state.isPlay\n                        ? <i\n                            className=\"iconfont icon-bofang\"\n                            onClick={() => this.audioPlay()}\n                        ></i>\n                        : <i\n                            className=\"iconfont icon-zanting\"\n                            onClick={() => this.audioStop()}\n                        ></i>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Audio;\n"]},"metadata":{},"sourceType":"module"}