{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/playbar/index.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport Audio from \"../audio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDuration = value => {\n      const time = value / 1000;\n      const min = Math.floor(time / 60);\n      min.toString().padStart(2, '0');\n      const sec = Math.floor(time % 60);\n      sec.toString().padStart(2, '0');\n      return `${min}:${sec}`;\n    };\n\n    this.onNextClick = () => {};\n\n    this.onPrevClick = () => {};\n\n    this.onShowLyricsClick = () => {\n      console.log('歌词');\n    };\n\n    this.audio = /*#__PURE__*/React.createRef();\n    this.state = store.getState();\n  }\n\n  componentDidMount() {\n    console.log('this.audio', this.audio);\n  }\n\n  render() {\n    if (this.state.isPlaying) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.currentSongItem.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.props.currentSongItem.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.currentSongItem.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-progress\",\n          children: /*#__PURE__*/_jsxDEV(Audio, {\n            audioUrl: this.props.mp3Url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-lyrics\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont icon-geci\",\n            onClick: this.onShowLyricsClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default PlayBar;","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/playbar/index.js"],"names":["React","Component","store","Audio","PlayBar","constructor","props","formatDuration","value","time","min","Math","floor","toString","padStart","sec","onNextClick","onPrevClick","onShowLyricsClick","console","log","audio","createRef","state","getState","componentDidMount","render","isPlaying","currentSongItem","imageUrl","artistName","name","mp3Url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,iCAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,cANmB,GAMDC,KAAD,IAAW;AACxB,YAAMC,IAAI,GAAGD,KAAK,GAAG,IAArB;AACA,YAAME,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAZ;AACAC,MAAAA,GAAG,CAACG,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B;AACA,YAAMC,GAAG,GAAGJ,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAZ;AACAM,MAAAA,GAAG,CAACF,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B;AACA,aAAQ,GAAEJ,GAAI,IAAGK,GAAI,EAArB;AACH,KAbkB;;AAAA,SAmBnBC,WAnBmB,GAmBL,MAAM,CAEnB,CArBkB;;AAAA,SAuBnBC,WAvBmB,GAuBL,MAAM,CAEnB,CAzBkB;;AAAA,SA2BnBC,iBA3BmB,GA2BC,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KA7BkB;;AAEf,SAAKC,KAAL,gBAAarB,KAAK,CAACsB,SAAN,EAAb;AACA,SAAKC,KAAL,GAAarB,KAAK,CAACsB,QAAN,EAAb;AACH;;AAWDC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKC,KAA/B;AACH;;AAcDK,EAAAA,MAAM,GAAG;AACD,QAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACtB,0BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWsB,eAAX,CAA2BC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACI;AAAA,sBAAO,KAAKvB,KAAL,CAAWsB,eAAX,CAA2BE;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAI,KAAKxB,KAAL,CAAWsB,eAAX,CAA2BG;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAQI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI,QAAC,KAAD;AACI,YAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAW0B;AADzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eAaI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AACI,YAAA,SAAS,EAAC,oBADd;AAEI,YAAA,OAAO,EAAE,KAAKd;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAsBH;AACJ;;AAzDuB;;AA6DhC,eAAed,OAAf","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport Audio from \"../audio\";\n\nclass PlayBar extends Component {\n    constructor(props) {\n        super(props);\n        this.audio = React.createRef()\n        this.state = store.getState()\n    }\n\n    formatDuration = (value) => {\n        const time = value / 1000\n        const min = Math.floor(time / 60)\n        min.toString().padStart(2, '0')\n        const sec = Math.floor(time % 60)\n        sec.toString().padStart(2, '0')\n        return `${min}:${sec}`\n    }\n\n    componentDidMount() {\n        console.log('this.audio', this.audio)\n    }\n\n    onNextClick = () => {\n\n    }\n\n    onPrevClick = () => {\n\n    }\n\n    onShowLyricsClick = () => {\n        console.log('歌词')\n    }\n\n    render() {\n            if (this.state.isPlaying) {\n                return (\n                    <div className=\"playbar\">\n                        <div className=\"playbar-img\">\n                            <img src={this.props.currentSongItem.imageUrl}/>\n                        </div>\n                        <div className=\"playbar-info\">\n                            <span>{this.props.currentSongItem.artistName}</span>\n                            <p>{this.props.currentSongItem.name}</p>\n                        </div>\n                        <div className=\"playbar-progress\">\n                            <Audio\n                                audioUrl={this.props.mp3Url}\n                            />\n                        </div>\n                        <div className=\"playbar-lyrics\">\n                            <i\n                                className=\"iconfont icon-geci\"\n                                onClick={this.onShowLyricsClick}\n                            ></i>\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n}\n\nexport default PlayBar;"]},"metadata":{},"sourceType":"module"}