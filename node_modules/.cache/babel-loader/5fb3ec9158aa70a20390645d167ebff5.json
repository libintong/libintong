{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/audio/index.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/audio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Audio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatTime = value => {\n      const min = Math.floor(value / 60).toString().padStart(2, '0');\n      const sec = Math.floor(value % 60).toString().padStart(2, '0');\n      return `${min}:${sec}`;\n    };\n\n    this.canplay = () => {\n      this.audio.current.oncanplay = () => {\n        let totalTime = (Math.floor(this.audio.current.duration / 60) + \"\").padStart(2, \"0\") + \":\" + (Math.floor(this.audio.current.duration % 60) + \"\").padStart(2, \"0\");\n        this.setState({\n          totalTime\n        });\n      };\n    };\n\n    this.timeUpdate = () => {\n      this.audio.current.ontimeupdate = () => {\n        var currentTime = (Math.floor(this.audio.current.currentTime / 60) + \"\").padStart(2, \"0\") + \":\" + (Math.floor(this.audio.current.currentTime % 60) + \"\").padStart(2, \"0\");\n        this.setState({\n          currentTime: currentTime\n        });\n        this.inside.current.style.width = this.audio.current.currentTime / this.audio.current.duration * 100 + \"%\";\n      };\n    };\n\n    this.audioPlay = () => {\n      this.setState({\n        isPlay: true\n      });\n      this.audio.current.play();\n    };\n\n    this.audioStop = () => {\n      this.setState({\n        isPlay: false\n      });\n      this.audio.current.pause();\n    };\n\n    this.onProgressChange = e => {\n      let outsideWidth = this.outside.current.offsetWidth;\n      let insideWidth = e.targetTouches[0].clientX;\n\n      if (insideWidth > outsideWidth || insideWidth < 0) {\n        return;\n      }\n\n      this.inside.current.style.width = insideWidth + \"px\";\n      this.audio.current.currentTime = insideWidth / outsideWidth * this.audio.current.duration;\n    };\n\n    this.state = {\n      url: this.props.audioUrl,\n      currentTime: \"00:00\",\n      totalTime: \"00:00\",\n      isPlay: false\n    };\n    this.outside = /*#__PURE__*/React.createRef(); //自定义进度条外框\n\n    this.inside = /*#__PURE__*/React.createRef(); //自定义进度条内核\n\n    this.audio = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.canplay();\n    this.timeUpdate();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-outside\",\n        ref: this.outside,\n        onTouchMove: e => this.onProgressChange(e),\n        onTouchStart: e => this.onProgressChange(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-inside\",\n          ref: this.inside,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"audio-inside-btn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.totalTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: this.audio,\n        src: this.state.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-btn\",\n        children: !this.state.isPlay ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont icon-bofang\",\n          onClick: this.audioPlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"iconfont icon-zanting\",\n          onClick: this.audioStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/audio/index.js"],"names":["React","Component","Audio","constructor","props","formatTime","value","min","Math","floor","toString","padStart","sec","canplay","audio","current","oncanplay","totalTime","duration","setState","timeUpdate","ontimeupdate","currentTime","inside","style","width","audioPlay","isPlay","play","audioStop","pause","onProgressChange","e","outsideWidth","outside","offsetWidth","insideWidth","targetTouches","clientX","state","url","audioUrl","createRef","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/audio.css'\n\nclass Audio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: this.props.audioUrl,\n            currentTime: \"00:00\",\n            totalTime: \"00:00\",\n            isPlay: false\n        };\n        this.outside = React.createRef(); //自定义进度条外框\n        this.inside = React.createRef(); //自定义进度条内核\n        this.audio = React.createRef();\n    }\n\n    componentDidMount() {\n        this.canplay();\n        this.timeUpdate();\n    }\n\n    formatTime = (value) => {\n        const min = Math.floor(value / 60).toString().padStart(2, '0')\n        const sec = Math.floor(value % 60).toString().padStart(2, '0')\n        return `${min}:${sec}`\n    }\n\n    //在音频可以播放时就显示总时长\n    canplay = () => {\n        this.audio.current.oncanplay = () => {\n            let totalTime = (Math.floor(this.audio.current.duration / 60) + \"\").padStart(2, \"0\") +\n                \":\" +\n                (Math.floor(this.audio.current.duration % 60) + \"\").padStart(2, \"0\");\n            this.setState({\n                totalTime\n            });\n        };\n    }\n\n\n    //在音频播放时当前时间也跟着变化\n    timeUpdate = () => {\n        this.audio.current.ontimeupdate = () => {\n            var currentTime =\n                (Math.floor(this.audio.current.currentTime / 60) + \"\").padStart(2, \"0\")\n                + \":\" +\n                (Math.floor(this.audio.current.currentTime % 60) + \"\").padStart(2, \"0\");\n            this.setState({\n                currentTime: currentTime\n            });\n            this.inside.current.style.width =\n                (this.audio.current.currentTime / this.audio.current.duration) * 100 + \"%\";\n        };\n    }\n\n    //播放开始\n    audioPlay = () => {\n        this.setState({\n            isPlay: true\n        })\n        this.audio.current.play();\n    }\n\n    //播放暂停\n    audioStop = () => {\n        this.setState({\n            isPlay: false\n        })\n        this.audio.current.pause();\n    }\n\n\n    //设置播放进度\n    onProgressChange = (e) => {\n        let outsideWidth = this.outside.current.offsetWidth;\n        let insideWidth = e.targetTouches[0].clientX\n        if (insideWidth > outsideWidth || insideWidth < 0) { return; }\n        this.inside.current.style.width = insideWidth + \"px\";\n        this.audio.current.currentTime =\n            (insideWidth / outsideWidth) * this.audio.current.duration;\n    }\n\n    render(){\n        return (\n            <div className=\"audio\">\n                <span>{this.state.currentTime}</span>\n                <div\n                    className=\"audio-outside\"\n                    ref={this.outside}\n                    onTouchMove={(e) => this.onProgressChange(e)}\n                    onTouchStart={(e) => this.onProgressChange(e)}\n                >\n                    <div\n                        className=\"audio-inside\"\n                        ref={this.inside}\n                    >\n                        <div className=\"audio-inside-btn\"></div>\n                    </div>\n                </div>\n                <span>{this.state.totalTime}</span>\n                    <audio\n                        ref={this.audio}\n                        src={this.state.url}\n                    ></audio>\n                <div className=\"audio-btn\">\n                    {!this.state.isPlay\n                        ? <i\n                            className=\"iconfont icon-bofang\"\n                            onClick={this.audioPlay}\n                        ></i>\n                        : <i\n                            className=\"iconfont icon-zanting\"\n                            onClick={this.audioStop}\n                        ></i>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Audio;\n"]},"metadata":{},"sourceType":"module"}