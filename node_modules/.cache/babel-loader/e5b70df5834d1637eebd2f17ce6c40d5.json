{"ast":null,"code":"const defaultState = {\n  imageIndex: 0,\n  username: '',\n  password: '',\n  code: '',\n  newSongUrl: '',\n  isLogin: false,\n  isPlaying: false,\n  showBar: false,\n  showBackToTop: false,\n  userInfo: {},\n  songDetail: [],\n  currentSongItem: [],\n  newSongList1: [],\n  bannerList: [],\n  musicUrlList: []\n};\nexport default ((state = defaultState, action) => {\n  if (action.type === 'get_username_value') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.username = action.value;\n    return newState;\n  }\n\n  if (action.type === 'get_password_value') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.password = action.value;\n    return newState;\n  }\n\n  if (action.type === 'get_userInfo') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.userInfo = action.value;\n    return newState;\n  }\n\n  if (action.type === 'get_banner_list') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.bannerList = action.value;\n    return newState;\n  }\n\n  if (action.type === 'get_newsong_value') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.newSongList = action.value;\n    return newState;\n  }\n\n  if (action.type === 'change_isLogin_login') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.isLogin = action.value;\n    return newState;\n  }\n\n  if (action.type === 'change_isLogin_logout') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.isLogin = action.value;\n    return newState;\n  }\n\n  if (action.type === 'get_newsongInfo_value') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.newSongList1 = action.value;\n    return newState;\n  }\n\n  if (action.type === 'get_song_url') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.newSongUrl = action.value;\n    console.log('lbt reducer url1', newState.newSongUrl);\n    return newState;\n  }\n\n  if (action.type === 'set_current_song_item') {\n    const newState = JSON.parse(JSON.stringify(state));\n    const { ...songItem\n    } = action.value[0];\n    newState.currentSongItem = songItem;\n    return newState;\n  }\n\n  if (action.type === 'set_music_url_list') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.musicUrlList = action.value;\n    return newState;\n  }\n\n  if (action.type === 'change_isPlaying_true') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.isPlaying = !newState.isPlaying;\n    console.log('change_isPlaying_true', newState.isPlaying);\n    return newState;\n  }\n\n  if (action.type === 'change_isPlaying_false') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.isPlaying = !newState.isPlaying;\n    console.log('change_isPlaying_false', newState.isPlaying);\n    return newState;\n  }\n\n  if (action.type === 'change_allTime') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.allTime = action.value;\n    console.log('change_allTime', newState.allTime);\n    return newState;\n  }\n\n  if (action.type === 'change_current') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.current = action.value;\n    console.log('change_current', newState.current);\n    return newState;\n  }\n\n  if (action.type === 'change_backToTop_true') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.showBackToTop = !newState.showBackToTop;\n    return newState;\n  }\n\n  if (action.type === 'change_backToTop_false') {\n    const newState = JSON.parse(JSON.stringify(state));\n    newState.showBackToTop = !newState.showBackToTop;\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/store/reducer.js"],"names":["defaultState","imageIndex","username","password","code","newSongUrl","isLogin","isPlaying","showBar","showBackToTop","userInfo","songDetail","currentSongItem","newSongList1","bannerList","musicUrlList","state","action","type","newState","JSON","parse","stringify","value","newSongList","console","log","songItem","allTime","current"],"mappings":"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","sourcesContent":["const defaultState = {\n    imageIndex: 0,\n    username: '',\n    password: '',\n    code: '',\n    newSongUrl: '',\n    isLogin: false,\n    isPlaying: false,\n    showBar: false,\n    showBackToTop: false,\n    userInfo: {},\n    songDetail: [],\n    currentSongItem: [],\n    newSongList1: [],\n    bannerList: [],\n    musicUrlList: [],\n}\n\nexport default (state=defaultState, action)=>{\n    if(action.type === 'get_username_value'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.username = action.value\n        return newState\n    }\n    if(action.type === 'get_password_value'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.password = action.value\n        return newState\n    }\n    if(action.type === 'get_userInfo'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.userInfo = action.value\n        return newState\n    }\n    if(action.type === 'get_banner_list'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.bannerList = action.value\n        return newState\n    }\n    if(action.type === 'get_newsong_value'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.newSongList = action.value\n        return newState\n    }\n    if(action.type === 'change_isLogin_login'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.isLogin = action.value\n        return newState\n    }\n    if(action.type === 'change_isLogin_logout'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.isLogin = action.value\n        return newState\n    }\n    if(action.type === 'get_newsongInfo_value'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.newSongList1 = action.value\n        return newState\n    }\n    if(action.type === 'get_song_url'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.newSongUrl = action.value\n        console.log('lbt reducer url1', newState.newSongUrl)\n        return newState\n    }\n    if(action.type === 'set_current_song_item'){\n        const newState = JSON.parse(JSON.stringify(state))\n        const { ...songItem } = action.value[0]\n        newState.currentSongItem = songItem\n        return newState\n    }\n    if(action.type === 'set_music_url_list'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.musicUrlList = action.value\n        return newState\n    }\n    if(action.type === 'change_isPlaying_true'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.isPlaying = !newState.isPlaying\n        console.log('change_isPlaying_true', newState.isPlaying)\n        return newState\n    }\n    if(action.type === 'change_isPlaying_false'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.isPlaying = !newState.isPlaying\n        console.log('change_isPlaying_false', newState.isPlaying)\n        return newState\n    }\n    if(action.type === 'change_allTime'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.allTime = action.value\n        console.log('change_allTime', newState.allTime)\n        return newState\n    }\n    if(action.type === 'change_current'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.current = action.value\n        console.log('change_current', newState.current)\n        return newState\n    }\n    if(action.type === 'change_backToTop_true'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.showBackToTop = !newState.showBackToTop\n        return newState\n    }\n    if(action.type === 'change_backToTop_false'){\n        const newState = JSON.parse(JSON.stringify(state))\n        newState.showBackToTop = !newState.showBackToTop\n        return newState\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}