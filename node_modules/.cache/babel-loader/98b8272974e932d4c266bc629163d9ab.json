{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../store\";\nconst storeValue = store.getState();\nexport const getLogin = (a, b) => {\n  const isLogin = false;\n  axios.post('http://localhost:3000/login/cellphone', {\n    phone: a,\n    password: b\n  }).then(value => {\n    const {\n      account,\n      ...dataValue\n    } = value.data;\n    console.log('getlogin', account.id);\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n};\nexport const getNewsong = () => {\n  const newSongItem = {\n    id: '',\n    name: '',\n    imageUrl: ''\n  };\n  const newSongList = [];\n  axios.get('http://localhost:3000/personalized/newsong').then(value => {\n    for (let i = 0; i < value.data.result.length; i++) {\n      const { ...newsongData\n      } = value.data.result;\n      newSongItem.id = newsongData[i].id;\n      newSongItem.name = newsongData[i].name;\n      newSongItem.imageUrl = newsongData[i].picUrl;\n      newSongList.push({ ...newSongItem\n      });\n    } // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n    // 我这块自己这样写只能拿到一个，随机的id\n    // for (let j = 0; j < newSongList.length; j++) {\n    //     console.log(newSongList[j].id)\n    //     axios.post(\n    //         'http://localhost:3000/song/url',\n    //         {id: newSongList[j].id}\n    //     ).then((value) => {\n    //         console.log(value.data.data[0]);\n    //     }).catch(() => {\n    //\n    //     })\n    // }\n\n\n    const action = {\n      type: 'get_newsong_value',\n      value: newSongList\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getNewsong error', error);\n  });\n}; // 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/services/api.js"],"names":["axios","store","storeValue","getState","getLogin","a","b","isLogin","post","phone","password","then","value","account","dataValue","data","console","log","id","catch","error","getBanner","get","banners","bannerImageUrl","i","length","push","imageUrl","action","type","dispatch","getNewsong","newSongItem","name","newSongList","result","newsongData","picUrl"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nconst storeValue = store.getState()\n\nexport const getLogin = (a,b) => {\n    const isLogin = false\n    axios.post(\n        'http://localhost:3000/login/cellphone',\n        {\n            phone: a,\n            password: b\n        })\n        .then((value) => {\n            const { account, ...dataValue } = value.data\n            console.log('getlogin', account.id)\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n}\n\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const { ...banners } = value.data.banners\n            const bannerImageUrl = []\n            for(let i=0 ; i < value.data.banners.length; i++){\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action ={\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getBanner error', error)\n        })\n}\n\n\nexport const getNewsong = () => {\n    const newSongItem = {\n        id: '',\n        name: '',\n        imageUrl: '',\n    }\n    const newSongList = []\n    axios.get('http://localhost:3000/personalized/newsong')\n        .then((value)=> {\n            for (let i = 0; i < value.data.result.length; i++) {\n                const {...newsongData} = value.data.result\n                newSongItem.id = newsongData[i].id;\n                newSongItem.name = newsongData[i].name;\n                newSongItem.imageUrl = newsongData[i].picUrl;\n                newSongList.push({...newSongItem})\n            }\n            // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n            // 我这块自己这样写只能拿到一个，随机的id\n            // for (let j = 0; j < newSongList.length; j++) {\n            //     console.log(newSongList[j].id)\n            //     axios.post(\n            //         'http://localhost:3000/song/url',\n            //         {id: newSongList[j].id}\n            //     ).then((value) => {\n            //         console.log(value.data.data[0]);\n            //     }).catch(() => {\n            //\n            //     })\n            // }\n            const action = {\n                type: 'get_newsong_value',\n                value: newSongList\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getNewsong error', error)\n        })\n}\n\n// 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n"]},"metadata":{},"sourceType":"module"}