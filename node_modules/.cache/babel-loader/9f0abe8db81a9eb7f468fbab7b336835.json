{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../store\";\nimport qs from 'qs';\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n};\nexport const getNewsong = () => {\n  const newSongList = [];\n  const newSongItem = {\n    id: '',\n    name: '',\n    imageUrl: ''\n  };\n  axios.get('http://localhost:3000/personalized/newsong').then(value => {\n    for (let i = 0; i < value.data.result.length; i++) {\n      const { ...newsongData\n      } = value.data.result;\n      newSongItem.id = newsongData[i].id;\n      newSongItem.name = newsongData[i].name;\n      newSongItem.imageUrl = newsongData[i].picUrl;\n      newSongList.push(newSongItem);\n    }\n\n    const action = {\n      type: 'get_newsong_value',\n      value: newSongList\n    };\n    store.dispatch(action);\n    console.log(...store.getState().newsongList.length);\n  }).catch(error => {\n    console.log('getNewsong error', error);\n  });\n};\nexport const getSongUrl = () => {\n  console.log(store.getState().newsongList.length);\n\n  for (let i = 0; i < store.getState().newsongList.length; i++) {\n    const data = store.getState().newsongList[i].id; // qs.stringify(data)\n\n    console.log(data);\n  }\n\n  axios.post('http://localhost:3000/song/url', {}).then(value => {\n    for (let i = 0; i < value.data.result.length; i++) {}\n\n    console.log();\n  }).catch(error => {\n    console.log('getSongInfo error', error);\n  });\n};","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/services/api.js"],"names":["axios","store","qs","getBanner","get","then","value","banners","data","bannerImageUrl","i","length","push","imageUrl","action","type","dispatch","catch","error","console","log","getNewsong","newSongList","newSongItem","id","name","result","newsongData","picUrl","getState","newsongList","getSongUrl","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport qs from 'qs';\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const { ...banners } = value.data.banners\n            const bannerImageUrl = []\n            for(let i=0 ; i < value.data.banners.length; i++){\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action ={\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getBanner error', error)\n        })\n}\n\nexport const getNewsong = () => {\n    const newSongList = []\n    const newSongItem = {\n        id: '',\n        name: '',\n        imageUrl: '',\n    }\n    axios.get('http://localhost:3000/personalized/newsong')\n        .then((value)=>{\n            for(let i = 0; i <  value.data.result.length; i++){\n                const { ...newsongData } = value.data.result\n                newSongItem.id = newsongData[i].id;\n                newSongItem.name = newsongData[i].name;\n                newSongItem.imageUrl = newsongData[i].picUrl;\n                newSongList.push(newSongItem)\n            }\n            const action = {\n                type: 'get_newsong_value',\n                value: newSongList\n            }\n            store.dispatch(action)\n            console.log(...store.getState().newsongList.length)\n        })\n        .catch((error)=>{\n            console.log('getNewsong error', error)\n        })\n}\n\nexport const getSongUrl = () => {\n    console.log(store.getState().newsongList.length)\n    for(let i=0; i < store.getState().newsongList.length; i++){\n        const data =store.getState().newsongList[i].id\n        // qs.stringify(data)\n        console.log(data)\n    }\n    axios.post(\n        'http://localhost:3000/song/url',\n        {})\n        .then((value)=>{\n            for(let i = 0; i <  value.data.result.length; i++){\n\n            }\n            console.log()\n        })\n        .catch((error)=>{\n            console.log('getSongInfo error', error)\n        })\n}"]},"metadata":{},"sourceType":"module"}