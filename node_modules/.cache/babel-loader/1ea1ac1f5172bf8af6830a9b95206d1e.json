{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/playbar/index.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport Audio from \"./11\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDuration = value => {\n      const time = value / 1000;\n      const min = Math.floor(time / 60);\n      min.toString().padStart(2, '0');\n      const sec = Math.floor(time % 60);\n      sec.toString().padStart(2, '0');\n      return `${min}:${sec}`;\n    };\n\n    this.onHandleSetState = () => {\n      this.setState(store.getState());\n    };\n\n    this.onNextClick = () => {};\n\n    this.onPrevClick = () => {};\n\n    this.onPauseMusicClick = () => {\n      const action = {\n        type: 'change_isPlaying_false'\n      };\n      store.dispatch(action);\n      this.audio.current.pause();\n    };\n\n    this.onPlayMusicClick = () => {\n      const action = {\n        type: 'change_isPlaying_true'\n      };\n      store.dispatch(action);\n      this.audio.current.play();\n    };\n\n    this.audio = /*#__PURE__*/React.createRef();\n    this.state = store.getState();\n  }\n\n  componentDidMount() {\n    store.subscribe(this.onHandleSetState);\n    console.log('this.audio', this.audio); // this.audio.current.onended = () => {\n    //     this.nextSong()\n    // }\n  }\n\n  render() {\n    if (this.state.isPlaying) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.currentSongItem.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.props.currentSongItem.artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.props.currentSongItem.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-progress\",\n          children: /*#__PURE__*/_jsxDEV(Audio, {\n            audioUrl: this.props.mp3Url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-lyrics\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont icon-geci\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default PlayBar;","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/playbar/index.js"],"names":["React","Component","store","Audio","PlayBar","constructor","props","formatDuration","value","time","min","Math","floor","toString","padStart","sec","onHandleSetState","setState","getState","onNextClick","onPrevClick","onPauseMusicClick","action","type","dispatch","audio","current","pause","onPlayMusicClick","play","createRef","state","componentDidMount","subscribe","console","log","render","isPlaying","currentSongItem","imageUrl","artistName","name","mp3Url"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport Audio from \"./11\";\n\nclass PlayBar extends Component {\n    constructor(props) {\n        super(props);\n        this.audio = React.createRef()\n        this.state = store.getState()\n    }\n\n    formatDuration = (value) => {\n        const time = value / 1000\n        const min = Math.floor(time / 60)\n        min.toString().padStart(2, '0')\n        const sec = Math.floor(time % 60)\n        sec.toString().padStart(2, '0')\n        return `${min}:${sec}`\n    }\n\n    componentDidMount() {\n        store.subscribe(this.onHandleSetState)\n        console.log('this.audio', this.audio)\n        // this.audio.current.onended = () => {\n        //     this.nextSong()\n        // }\n    }\n\n    onHandleSetState = () => {\n        this.setState(store.getState())\n    }\n\n    onNextClick = () => {\n\n    }\n\n    onPrevClick = () => {\n\n    }\n\n    onPauseMusicClick = () => {\n        const action = {\n            type: 'change_isPlaying_false',\n        }\n        store.dispatch(action)\n        this.audio.current.pause()\n    }\n\n    onPlayMusicClick = () => {\n        const action = {\n            type: 'change_isPlaying_true',\n        }\n        store.dispatch(action)\n        this.audio.current.play()\n    }\n\n    render() {\n            if (this.state.isPlaying) {\n                return (\n                    <div className=\"playbar\">\n                        {/*<div className=\"playbar-audio\">*/}\n                        {/*    <audio*/}\n                        {/*        ref={this.audio}*/}\n                        {/*        src={this.props.mp3Url}*/}\n                        {/*        // autoPlay={true}*/}\n                        {/*        // style={{visibility: \"hidden\"}}*/}\n                        {/*    >*/}\n                        {/*    </audio>*/}\n                        {/*</div>*/}\n                        <div className=\"playbar-img\">\n                            <img src={this.props.currentSongItem.imageUrl}/>\n                        </div>\n                        <div className=\"playbar-info\">\n                            <span>{this.props.currentSongItem.artistName}</span>\n                            <p>{this.props.currentSongItem.name}</p>\n                        </div>\n                        <div className=\"playbar-progress\">\n                            <Audio\n                                audioUrl={this.props.mp3Url}\n                            />\n                        </div>\n\n                            {/*<label>00:00</label>*/}\n                            {/*<progress*/}\n                            {/*    max={this.formatDuration(this.props.currentSongItem.duration)}*/}\n                            {/*    value={\"this.audio.currentTime / this.props.currentSongItem.duration\"}*/}\n                            {/*></progress>*/}\n                            {/*<label>{this.formatDuration(this.props.currentSongItem.duration)}</label>*/}\n                        {/*</div>*/}\n                        {/*<div className=\"playbar-btn\">*/}\n                        {/*    <i*/}\n                        {/*        className=\"iconfont icon-shangyige\"*/}\n                        {/*        onClick={this.onPrevClick}*/}\n                        {/*    >*/}\n                        {/*    </i>*/}\n                        {/*    {*/}\n                        {/*        this.state.isPlaying*/}\n                        {/*            ? <i*/}\n                        {/*                className=\"iconfont icon-zanting\"*/}\n                        {/*                onClick={this.onPauseMusicClick}*/}\n                        {/*            ></i>*/}\n                        {/*            : <i*/}\n                        {/*                className=\"iconfont icon-bofang\"*/}\n                        {/*                onClick={this.onPlayMusicClick}*/}\n                        {/*            ></i>*/}\n                        {/*    }*/}\n                        {/*    <i*/}\n                        {/*        className=\"iconfont icon-xiayige\"*/}\n                        {/*        onClick={this.onNextClick}*/}\n                        {/*    ></i>*/}\n                        {/*</div>*/}\n                        <div className=\"playbar-lyrics\">\n                            <i className=\"iconfont icon-geci\"></i>\n                        </div>\n                    </div>\n                )\n            }\n        }\n\n}\n\nexport default PlayBar;"]},"metadata":{},"sourceType":"module"}