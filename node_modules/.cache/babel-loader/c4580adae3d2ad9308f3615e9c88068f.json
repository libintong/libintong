{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/services/api.js\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storeValue = store.getState();\nexport const getLogin = (a, b) => {\n  axios.post('http://localhost:3000/login/cellphone', {\n    phone: a,\n    password: b\n  }).then(value => {\n    const {\n      account,\n      code,\n      ...dataValue\n    } = value.data; // console.log('getlogin', account.id)\n    // axios.post('https://localhost:3000/user/detail', {uid: account.id})\n    //     .then((value)=>{\n    //         console.log('user info', value)\n    //     })\n    //     .catch()\n\n    if (code == 200) {\n      const action = {\n        type: 'change_isLogin_login',\n        value: true\n      };\n      store.dispatch(action);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    } else {\n      alert('登录失败！！！');\n    }\n  }).catch(error => {\n    console.log('login error', error);\n  });\n};\nexport const getUserInfo = () => {\n  axios.post('http://localhost:3000/user/detail', {\n    uid: storeValue.userId\n  }).then(value => {\n    console.log('lbt getUserInfo', value);\n  }).catch();\n};\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n}; // export const getNewsong = () => {\n//     const newSongItem = {\n//         id: '',\n//         name: '',\n//         imageUrl: '',\n//     }\n//     const newSongList = []\n//     axios.get('http://localhost:3000/personalized/newsong')\n//         .then((value)=> {\n//             for (let i = 0; i < value.data.result.length; i++) {\n//                 const {...newsongData} = value.data.result\n//                 newSongItem.id = newsongData[i].id;\n//                 newSongItem.name = newsongData[i].name;\n//                 newSongItem.imageUrl = newsongData[i].picUrl;\n//                 newSongList.push({...newSongItem})\n//             }\n//             // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n//             // 我这块自己这样写只能拿到一个，随机的id\n//             // for (let j = 0; j < newSongList.length; j++) {\n//             //     console.log(newSongList[j].id)\n//             //     axios.post(\n//             //         'http://localhost:3000/song/url',\n//             //         {id: newSongList[j].id}\n//             //     ).then((value) => {\n//             //         console.log(value.data.data[0]);\n//             //     }).catch(() => {\n//             //\n//             //     })\n//             // }\n//             const action = {\n//                 type: 'get_newsong_value',\n//                 value: newSongList\n//             }\n//             store.dispatch(action)\n//         })\n//         .catch((error)=>{\n//             console.log('getNewsong error', error)\n//         })\n// }\n// 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n\nexport const getSongUrlById = id => {\n  axios.post('http://localhost:3000/song/url', {\n    id: id\n  }).then(value => {\n    const action = {\n      type: 'get_song_url',\n      value: value.data.data[0].url\n    };\n    store.dispatch(action);\n  }).catch(); // }else {\n  //     alert('isPlay是0')\n  //     return\n  // }\n}; //\n\nexport const getTopSong = () => {\n  const newSongItem = {\n    id: '',\n    artistName: '',\n    name: '',\n    imageUrl: '',\n    duration: ''\n  };\n  const newSongList = [];\n  axios.get('http://localhost:3000/top/song?type=16').then(value => {\n    const data = value.data.data;\n\n    for (let i = 0; i < data.length; i++) {\n      newSongItem.id = data[i].id;\n      newSongItem.artistName = data[i].artists[0].name;\n      newSongItem.name = data[i].name;\n      newSongItem.imageUrl = data[i].album.picUrl;\n      newSongItem.duration = data[i].duration;\n      newSongList.push({ ...newSongItem\n      });\n      newSongList.map(item => {\n        axios.post('http://localhost:3000/song/detail', {\n          ids: item.id\n        }).then(value => {\n          newSongItem.mp3Url = value.data.data[0].url;\n        }).catch(error => {\n          alert(error);\n        });\n      });\n      const action = {\n        type: 'get_newsongInfo_value',\n        value: newSongList\n      };\n      store.dispatch(action);\n    }\n  }).catch();\n};\nexport const getSongDetail = id => {\n  const songItem = {\n    imageUrl: '',\n    artistName: '',\n    name: ''\n  };\n  axios.post('http://localhost:3000/song/detail', {\n    ids: id\n  }).then(value => {\n    const { ...songdetail\n    } = value.data;\n    songItem.imageUrl = songdetail.songs[0].al.picUrl;\n    songItem.name = songdetail.songs[0].name;\n    songItem.artistName = songdetail.songs[0].ar[0].name;\n    console.log('songdetail', songItem);\n  }).catch();\n};\nexport const getSongLryic = id => {\n  axios.post('http://localhost:3000/lyric', {\n    id: id\n  }).then(value => {\n    console.log('lryic', value);\n  }).catch();\n};","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/services/api.js"],"names":["axios","store","Redirect","storeValue","getState","getLogin","a","b","post","phone","password","then","value","account","code","dataValue","data","action","type","dispatch","alert","catch","error","console","log","getUserInfo","uid","userId","getBanner","get","banners","bannerImageUrl","i","length","push","imageUrl","getSongUrlById","id","url","getTopSong","newSongItem","artistName","name","duration","newSongList","artists","album","picUrl","map","item","ids","mp3Url","getSongDetail","songItem","songdetail","songs","al","ar","getSongLryic"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport {Redirect} from \"react-router\";\n\nconst storeValue = store.getState()\n\nexport const getLogin = (a, b) => {\n    axios.post(\n        'http://localhost:3000/login/cellphone',\n        {\n            phone: a,\n            password: b\n        })\n        .then((value) => {\n            const {account, code, ...dataValue} = value.data\n            // console.log('getlogin', account.id)\n            // axios.post('https://localhost:3000/user/detail', {uid: account.id})\n            //     .then((value)=>{\n            //         console.log('user info', value)\n            //     })\n            //     .catch()\n            if (code == 200) {\n                const action = {\n                    type: 'change_isLogin_login',\n                    value: true\n                }\n                store.dispatch(action)\n                return (\n                    <Redirect to=\"/\"/>\n                )\n            } else {\n                alert('登录失败！！！')\n            }\n        })\n        .catch((error) => {\n            console.log('login error', error);\n        })\n}\n\nexport const getUserInfo = () => {\n    axios.post('http://localhost:3000/user/detail', {uid: storeValue.userId})\n        .then((value) => {\n            console.log('lbt getUserInfo', value)\n        })\n        .catch()\n}\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const {...banners} = value.data.banners\n            const bannerImageUrl = []\n            for (let i = 0; i < value.data.banners.length; i++) {\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action = {\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error) => {\n            console.log('getBanner error', error)\n        })\n}\n\n// export const getNewsong = () => {\n//     const newSongItem = {\n//         id: '',\n//         name: '',\n//         imageUrl: '',\n//     }\n//     const newSongList = []\n//     axios.get('http://localhost:3000/personalized/newsong')\n//         .then((value)=> {\n//             for (let i = 0; i < value.data.result.length; i++) {\n//                 const {...newsongData} = value.data.result\n//                 newSongItem.id = newsongData[i].id;\n//                 newSongItem.name = newsongData[i].name;\n//                 newSongItem.imageUrl = newsongData[i].picUrl;\n//                 newSongList.push({...newSongItem})\n//             }\n//             // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n//             // 我这块自己这样写只能拿到一个，随机的id\n//             // for (let j = 0; j < newSongList.length; j++) {\n//             //     console.log(newSongList[j].id)\n//             //     axios.post(\n//             //         'http://localhost:3000/song/url',\n//             //         {id: newSongList[j].id}\n//             //     ).then((value) => {\n//             //         console.log(value.data.data[0]);\n//             //     }).catch(() => {\n//             //\n//             //     })\n//             // }\n//             const action = {\n//                 type: 'get_newsong_value',\n//                 value: newSongList\n//             }\n//             store.dispatch(action)\n//         })\n//         .catch((error)=>{\n//             console.log('getNewsong error', error)\n//         })\n// }\n\n// 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n\nexport const getSongUrlById = (id) => {\n        axios.post(\n            'http://localhost:3000/song/url',\n            {id: id}\n        ).then(value => {\n            const action = {\n                type: 'get_song_url',\n                value: value.data.data[0].url\n            }\n            store.dispatch(action)\n        }).catch()\n    // }else {\n    //     alert('isPlay是0')\n    //     return\n    // }\n}\n//\nexport const getTopSong = () => {\n    const newSongItem = {\n        id: '',\n        artistName: '',\n        name: '',\n        imageUrl: '',\n        duration: ''\n    }\n    const newSongList = []\n    axios.get('http://localhost:3000/top/song?type=16')\n        .then((value) => {\n            const data = value.data.data\n            for (let i = 0; i < data.length; i++) {\n                newSongItem.id = data[i].id\n                newSongItem.artistName = data[i].artists[0].name\n                newSongItem.name = data[i].name\n                newSongItem.imageUrl = data[i].album.picUrl\n                newSongItem.duration = data[i].duration\n                newSongList.push({...newSongItem})\n                newSongList.map((item)=>{\n                    axios.post(\n                        'http://localhost:3000/song/detail',\n                        {ids: item.id}\n                ).then((value)=>{\n                        newSongItem.mp3Url = value.data.data[0].url\n                }).catch((error)=>{alert(error)})})\n                const action = {\n                    type: 'get_newsongInfo_value',\n                    value: newSongList\n                }\n                store.dispatch(action)\n            }\n        }).catch()\n}\n\nexport const getSongDetail = (id) => {\n    const songItem = {\n        imageUrl: '',\n        artistName: '',\n        name: '',\n\n    }\n    axios.post(\n        'http://localhost:3000/song/detail',\n        {\n            ids: id\n        }\n    ).then((value)=>{\n        const { ...songdetail } = value.data\n        songItem.imageUrl = songdetail.songs[0].al.picUrl\n        songItem.name = songdetail.songs[0].name\n        songItem.artistName = songdetail.songs[0].ar[0].name\n        console.log('songdetail', songItem)\n        }\n    ).catch()\n}\n\nexport const getSongLryic = (id) => {\n    axios.post('http://localhost:3000/lyric',\n        {\n            id: id\n        }).then((value)=>{\n            console.log('lryic', value)\n    }).catch()\n}"]},"metadata":{},"sourceType":"module"}