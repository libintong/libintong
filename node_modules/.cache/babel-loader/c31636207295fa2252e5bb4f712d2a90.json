{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/services/api.js\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storeValue = store.getState();\nexport const getLogin = (a, b) => {\n  axios.post('http://localhost:3000/login/cellphone', {\n    phone: a,\n    password: b\n  }).then(value => {\n    const {\n      account,\n      code,\n      ...dataValue\n    } = value.data; // console.log('getlogin', account.id)\n    // axios.post('https://localhost:3000/user/detail', {uid: account.id})\n    //     .then((value)=>{\n    //         console.log('user info', value)\n    //     })\n    //     .catch()\n\n    if (code == 200) {\n      const action = {\n        type: 'change_isLogin_login',\n        value: true\n      };\n      store.dispatch(action);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    } else {\n      alert('登录失败！！！');\n    }\n  }).catch(error => {\n    console.log('login error', error);\n  });\n};\nexport const getUserInfo = () => {\n  axios.post('http://localhost:3000/user/detail', {\n    uid: storeValue.userId\n  }).then(value => {\n    console.log(value);\n  }).catch();\n};\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n};\nexport const getNewsong = () => {\n  const newSongItem = {\n    id: '',\n    name: '',\n    imageUrl: ''\n  };\n  const newSongList = [];\n  axios.get('http://localhost:3000/personalized/newsong').then(value => {\n    for (let i = 0; i < value.data.result.length; i++) {\n      const { ...newsongData\n      } = value.data.result;\n      newSongItem.id = newsongData[i].id;\n      newSongItem.name = newsongData[i].name;\n      newSongItem.imageUrl = newsongData[i].picUrl;\n      newSongList.push({ ...newSongItem\n      });\n    } // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n    // 我这块自己这样写只能拿到一个，随机的id\n    // for (let j = 0; j < newSongList.length; j++) {\n    //     console.log(newSongList[j].id)\n    //     axios.post(\n    //         'http://localhost:3000/song/url',\n    //         {id: newSongList[j].id}\n    //     ).then((value) => {\n    //         console.log(value.data.data[0]);\n    //     }).catch(() => {\n    //\n    //     })\n    // }\n\n\n    const action = {\n      type: 'get_newsong_value',\n      value: newSongList\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getNewsong error', error);\n  });\n}; // 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n\nexport const getSongDedailById = ids => {\n  axios.post('http://localhost:3000/song/detail', {\n    ids: ids\n  }).then(value => {\n    console.log('getNewsongDetail', value);\n  }).catch();\n};\nexport const getTopSong = () => {\n  axios.get('http://localhost:3000/top/song?type=16').then(value => {\n    console.log(value.data.data.length);\n    const data = value.data.data;\n\n    for (let i = 0; i < data.length; i++) {\n      const id = data.id; // for(let j=0; j < data[i].artists.length; j++){\n      //     if(data[i].artists.length > 0){\n\n      const namelist = [];\n      namelist.push(data[i].artists[0].name, data[i].artists[1].name);\n      console.log('aa', namelist); // }else{\n      // }\n      // }\n      // data[i].artists[j].forEach((item)=>{\n      //\n      //     console.log('a', data[i].artists.length)\n      //     console.log('-----')\n      // })\n      //     const { ...artists } = data[i].artists\n      //     console.log('a', [artists[0].name])\n      // }else{\n      //     const { ...artists } = data[i].artists\n      //     console.log('b', artists[0].name)\n      // }\n    }\n  }).catch();\n};","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/services/api.js"],"names":["axios","store","Redirect","storeValue","getState","getLogin","a","b","post","phone","password","then","value","account","code","dataValue","data","action","type","dispatch","alert","catch","error","console","log","getUserInfo","uid","userId","getBanner","get","banners","bannerImageUrl","i","length","push","imageUrl","getNewsong","newSongItem","id","name","newSongList","result","newsongData","picUrl","getSongDedailById","ids","getTopSong","namelist","artists"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport { Redirect } from \"react-router\";\nconst storeValue = store.getState()\n\nexport const getLogin = (a,b) => {\n    axios.post(\n        'http://localhost:3000/login/cellphone',\n        {\n            phone: a,\n            password: b\n        })\n        .then((value) => {\n            const { account, code, ...dataValue } = value.data\n            // console.log('getlogin', account.id)\n            // axios.post('https://localhost:3000/user/detail', {uid: account.id})\n            //     .then((value)=>{\n            //         console.log('user info', value)\n            //     })\n            //     .catch()\n            if(code == 200){\n                const action = {\n                    type: 'change_isLogin_login',\n                    value: true\n                }\n                store.dispatch(action)\n                return (\n                    <Redirect to=\"/\"/>\n                )\n            }else{\n                alert('登录失败！！！')\n            }\n        })\n        .catch((error) => {\n            console.log('login error', error);\n        })\n}\n\nexport const getUserInfo = () => {\n    axios.post('http://localhost:3000/user/detail', {uid: storeValue.userId})\n        .then((value)=>{\n            console.log(value)\n        })\n        .catch()\n}\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const { ...banners } = value.data.banners\n            const bannerImageUrl = []\n            for(let i=0 ; i < value.data.banners.length; i++){\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action ={\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getBanner error', error)\n        })\n}\n\n\nexport const getNewsong = () => {\n    const newSongItem = {\n        id: '',\n        name: '',\n        imageUrl: '',\n    }\n    const newSongList = []\n    axios.get('http://localhost:3000/personalized/newsong')\n        .then((value)=> {\n            for (let i = 0; i < value.data.result.length; i++) {\n                const {...newsongData} = value.data.result\n                newSongItem.id = newsongData[i].id;\n                newSongItem.name = newsongData[i].name;\n                newSongItem.imageUrl = newsongData[i].picUrl;\n                newSongList.push({...newSongItem})\n            }\n            // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n            // 我这块自己这样写只能拿到一个，随机的id\n            // for (let j = 0; j < newSongList.length; j++) {\n            //     console.log(newSongList[j].id)\n            //     axios.post(\n            //         'http://localhost:3000/song/url',\n            //         {id: newSongList[j].id}\n            //     ).then((value) => {\n            //         console.log(value.data.data[0]);\n            //     }).catch(() => {\n            //\n            //     })\n            // }\n            const action = {\n                type: 'get_newsong_value',\n                value: newSongList\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getNewsong error', error)\n        })\n}\n\n// 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n\nexport const getSongDedailById = (ids) => {\n    axios.post(\n        'http://localhost:3000/song/detail',\n        {ids: ids}\n        )\n        .then(value =>{\n            console.log('getNewsongDetail', value)\n        })\n        .catch()\n}\n\nexport const getTopSong = () => {\n    axios.get('http://localhost:3000/top/song?type=16')\n        .then((value)=>{\n            console.log(value.data.data.length)\n            const data = value.data.data\n            for(let i=0; i < data.length; i++){\n                const id = data.id\n\n                // for(let j=0; j < data[i].artists.length; j++){\n                //     if(data[i].artists.length > 0){\n                const namelist = []\n                namelist.push(data[i].artists[0].name, data[i].artists[1].name)\n                        console.log('aa', namelist)\n                    // }else{\n                    // }\n\n                // }\n                // data[i].artists[j].forEach((item)=>{\n                //\n                //     console.log('a', data[i].artists.length)\n                //     console.log('-----')\n                // })\n                //     const { ...artists } = data[i].artists\n                //     console.log('a', [artists[0].name])\n                // }else{\n                //     const { ...artists } = data[i].artists\n                //     console.log('b', artists[0].name)\n                // }\n            }\n        })\n        .catch()\n}"]},"metadata":{},"sourceType":"module"}