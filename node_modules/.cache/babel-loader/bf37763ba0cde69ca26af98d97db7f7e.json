{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/services/api.js\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { Route, Redirect } from 'react-router';\nimport Login from \"../views/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storeValue = store.getState();\nexport const getLogin = (a, b) => {\n  axios.post('http://localhost:3000/login/cellphone', {\n    phone: a,\n    password: b\n  }).then(value => {\n    storeValue.isLogin = true;\n    const {\n      account,\n      code,\n      ...dataValue\n    } = value.data;\n    return /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => storeValue.isLogin == true ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this); // console.log('getlogin', account.id)\n    // axios.post('https://localhost:3000/user/detail', {uid: account.id})\n    //     .then((value)=>{\n    //         console.log('user info', value)\n    //     })\n    //     .catch()\n    // const action = {\n    //     type: 'get_userId',\n    //     userId: account.id\n    // }\n    // store.dispatch(action)\n\n    if (storeValue.isLogin == true) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this);\n    } else {\n      console.log('lbtlbt jump error');\n    } // }else{\n    //     console.log('lbtlbt jump error')\n    // }\n\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getUserInfo = () => {\n  axios.post('http://localhost:3000/user/detail', {\n    uid: storeValue.userId\n  }).then(value => {\n    console.log(value);\n  }).catch();\n};\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n};\nexport const getNewsong = () => {\n  const newSongItem = {\n    id: '',\n    name: '',\n    imageUrl: ''\n  };\n  const newSongList = [];\n  axios.get('http://localhost:3000/personalized/newsong').then(value => {\n    for (let i = 0; i < value.data.result.length; i++) {\n      const { ...newsongData\n      } = value.data.result;\n      newSongItem.id = newsongData[i].id;\n      newSongItem.name = newsongData[i].name;\n      newSongItem.imageUrl = newsongData[i].picUrl;\n      newSongList.push({ ...newSongItem\n      });\n    } // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n    // 我这块自己这样写只能拿到一个，随机的id\n    // for (let j = 0; j < newSongList.length; j++) {\n    //     console.log(newSongList[j].id)\n    //     axios.post(\n    //         'http://localhost:3000/song/url',\n    //         {id: newSongList[j].id}\n    //     ).then((value) => {\n    //         console.log(value.data.data[0]);\n    //     }).catch(() => {\n    //\n    //     })\n    // }\n\n\n    const action = {\n      type: 'get_newsong_value',\n      value: newSongList\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getNewsong error', error);\n  });\n}; // 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/services/api.js"],"names":["axios","store","Route","Redirect","Login","storeValue","getState","getLogin","a","b","post","phone","password","then","value","isLogin","account","code","dataValue","data","console","log","catch","error","getUserInfo","uid","userId","getBanner","get","banners","bannerImageUrl","i","length","push","imageUrl","action","type","dispatch","getNewsong","newSongItem","id","name","newSongList","result","newsongData","picUrl"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport { Route, Redirect } from 'react-router';\nimport Login from \"../views/login\";\nconst storeValue = store.getState()\n\nexport const getLogin = (a,b) => {\n    axios.post(\n        'http://localhost:3000/login/cellphone',\n        {\n            phone: a,\n            password: b\n        })\n        .then((value) => {\n            storeValue.isLogin = true\n            const { account, code, ...dataValue } = value.data\n            return (\n                <Route exact path=\"/\" render={() => (\n                    storeValue.isLogin == true ? (\n                        <Redirect to=\"/dashboard\"/>\n                    ) : (\n                        <Login/>\n                    )\n                )}/>\n                )\n            // console.log('getlogin', account.id)\n            // axios.post('https://localhost:3000/user/detail', {uid: account.id})\n            //     .then((value)=>{\n            //         console.log('user info', value)\n            //     })\n            //     .catch()\n            // const action = {\n            //     type: 'get_userId',\n            //     userId: account.id\n            // }\n            // store.dispatch(action)\n            if(storeValue.isLogin == true){\n                return (<Redirect to=\"/home\" />);\n            }else{\n                console.log('lbtlbt jump error')\n            }\n\n            // }else{\n            //     console.log('lbtlbt jump error')\n            // }\n\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n}\n\nexport const getUserInfo = () => {\n    axios.post('http://localhost:3000/user/detail', {uid: storeValue.userId})\n        .then((value)=>{\n            console.log(value)\n        })\n        .catch()\n}\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const { ...banners } = value.data.banners\n            const bannerImageUrl = []\n            for(let i=0 ; i < value.data.banners.length; i++){\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action ={\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getBanner error', error)\n        })\n}\n\n\nexport const getNewsong = () => {\n    const newSongItem = {\n        id: '',\n        name: '',\n        imageUrl: '',\n    }\n    const newSongList = []\n    axios.get('http://localhost:3000/personalized/newsong')\n        .then((value)=> {\n            for (let i = 0; i < value.data.result.length; i++) {\n                const {...newsongData} = value.data.result\n                newSongItem.id = newsongData[i].id;\n                newSongItem.name = newsongData[i].name;\n                newSongItem.imageUrl = newsongData[i].picUrl;\n                newSongList.push({...newSongItem})\n            }\n            // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n            // 我这块自己这样写只能拿到一个，随机的id\n            // for (let j = 0; j < newSongList.length; j++) {\n            //     console.log(newSongList[j].id)\n            //     axios.post(\n            //         'http://localhost:3000/song/url',\n            //         {id: newSongList[j].id}\n            //     ).then((value) => {\n            //         console.log(value.data.data[0]);\n            //     }).catch(() => {\n            //\n            //     })\n            // }\n            const action = {\n                type: 'get_newsong_value',\n                value: newSongList\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getNewsong error', error)\n        })\n}\n\n// 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n"]},"metadata":{},"sourceType":"module"}