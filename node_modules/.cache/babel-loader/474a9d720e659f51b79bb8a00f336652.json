{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/react-music-player-lbt/src/services/api.js\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { Redirect } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storeValue = store.getState();\nexport const getLogin = (a, b) => {\n  axios.post('http://localhost:3000/login/cellphone', {\n    phone: a,\n    password: b\n  }).then(value => {\n    const {\n      account,\n      code,\n      ...dataValue\n    } = value.data;\n\n    if (code == 200) {\n      const action = {\n        type: 'change_isLogin_login',\n        value: true\n      };\n      store.dispatch(action);\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    } else {\n      alert('登录失败！！！');\n    }\n  }).catch(error => {\n    console.log('login error', error);\n  });\n};\nexport const getUserInfo = () => {\n  axios.post('http://localhost:3000/user/detail', {\n    uid: storeValue.userId\n  }).then(value => {\n    console.log('lbt getUserInfo', value);\n  }).catch();\n};\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n};\nexport const getSongUrlById = ids => {\n  axios.post('http://localhost:3000/song/url', {\n    id: ids\n  }).then(value => {\n    const action = {\n      type: 'get_song_url',\n      value: value.data.data[0].url\n    };\n    store.dispatch(action);\n  }).catch();\n};\nexport const getTopSong = () => {\n  const newSongItem = {\n    id: '',\n    artistName: '',\n    name: '',\n    imageUrl: '',\n    duration: ''\n  };\n  const newSongList = [];\n  axios.get('http://localhost:3000/top/song?type=7').then(value => {\n    const data = value.data.data;\n\n    for (let i = 0; i < data.length; i++) {\n      newSongItem.id = data[i].id;\n      newSongItem.artistName = data[i].artists[0].name;\n      newSongItem.name = data[i].name;\n      newSongItem.imageUrl = data[i].album.picUrl;\n      newSongItem.duration = data[i].duration;\n      newSongList.push({ ...newSongItem\n      });\n      const action = {\n        type: 'get_newsongInfo_value',\n        value: newSongList\n      };\n      store.dispatch(action);\n    }\n\n    newSongList.map(item => {\n      getMusicUrlList(item.id);\n    });\n  }).catch();\n};\nexport const getMusicUrlList = id => {\n  const musicUrlItem = {\n    id: '',\n    url: ''\n  };\n  const musicUrlList = [];\n  axios.post('http://localhost:3000/song/url', {\n    id: id\n  }).then(value => {\n    musicUrlItem.id = value.data.data[0].id;\n    musicUrlItem.url = value.data.data[0].url;\n    musicUrlList.push({ ...musicUrlItem\n    });\n    const action = {\n      type: 'set_music_url_list',\n      value: musicUrlList\n    };\n    store.dispatch(action);\n  });\n};\nexport const getMp3UrlByIds = id => {};\nexport const getSongDetail = id => {\n  const songItem = {\n    imageUrl: '',\n    artistName: '',\n    name: ''\n  };\n  axios.post('http://localhost:3000/song/detail', {\n    ids: id\n  }).then(value => {\n    const { ...songdetail\n    } = value.data;\n    songItem.imageUrl = songdetail.songs[0].al.picUrl;\n    songItem.name = songdetail.songs[0].name;\n    songItem.artistName = songdetail.songs[0].ar[0].name;\n    console.log('songdetail', songItem);\n  }).catch();\n};\nexport const getSongLryic = id => {\n  axios.post('http://localhost:3000/lyric', {\n    id: id\n  }).then(value => {\n    console.log('lryic', value);\n  }).catch();\n};","map":{"version":3,"sources":["/Users/heytea/react-music-player-lbt/src/services/api.js"],"names":["axios","store","Redirect","storeValue","getState","getLogin","a","b","post","phone","password","then","value","account","code","dataValue","data","action","type","dispatch","alert","catch","error","console","log","getUserInfo","uid","userId","getBanner","get","banners","bannerImageUrl","i","length","push","imageUrl","getSongUrlById","ids","id","url","getTopSong","newSongItem","artistName","name","duration","newSongList","artists","album","picUrl","map","item","getMusicUrlList","musicUrlItem","musicUrlList","getMp3UrlByIds","getSongDetail","songItem","songdetail","songs","al","ar","getSongLryic"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nimport {Redirect} from \"react-router\";\n\nconst storeValue = store.getState()\n\nexport const getLogin = (a, b) => {\n    axios.post(\n        'http://localhost:3000/login/cellphone',\n        {\n            phone: a,\n            password: b\n        })\n        .then((value) => {\n            const {account, code, ...dataValue} = value.data\n            if (code == 200) {\n                const action = {\n                    type: 'change_isLogin_login',\n                    value: true\n                }\n                store.dispatch(action)\n                return (\n                    <Redirect to=\"/\"/>\n                )\n            } else {\n                alert('登录失败！！！')\n            }\n        })\n        .catch((error) => {\n            console.log('login error', error);\n        })\n}\n\nexport const getUserInfo = () => {\n    axios.post('http://localhost:3000/user/detail', {uid: storeValue.userId})\n        .then((value) => {\n            console.log('lbt getUserInfo', value)\n        })\n        .catch()\n}\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const {...banners} = value.data.banners\n            const bannerImageUrl = []\n            for (let i = 0; i < value.data.banners.length; i++) {\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action = {\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error) => {\n            console.log('getBanner error', error)\n        })\n}\n\nexport const getSongUrlById = (ids) => {\n    axios.post(\n        'http://localhost:3000/song/url',\n        {id: ids}\n    ).then(value => {\n        const action = {\n            type: 'get_song_url',\n            value: value.data.data[0].url\n        }\n        store.dispatch(action)\n    }).catch()\n}\n\nexport const getTopSong = () => {\n    const newSongItem = {\n        id: '',\n        artistName: '',\n        name: '',\n        imageUrl: '',\n        duration: ''\n    }\n    const newSongList = []\n    axios.get('http://localhost:3000/top/song?type=7')\n        .then((value) => {\n            const data = value.data.data\n            for (let i = 0; i < data.length; i++) {\n                newSongItem.id = data[i].id\n                newSongItem.artistName = data[i].artists[0].name\n                newSongItem.name = data[i].name\n                newSongItem.imageUrl = data[i].album.picUrl\n                newSongItem.duration = data[i].duration\n                newSongList.push({...newSongItem})\n                const action = {\n                    type: 'get_newsongInfo_value',\n                    value: newSongList\n                }\n                store.dispatch(action)\n            }\n            newSongList.map((item)=>{\n                getMusicUrlList(item.id)\n            })\n\n        }).catch()\n}\n\nexport const getMusicUrlList = (id) => {\n    const musicUrlItem = {\n        id: '',\n        url: '',\n    }\n    const musicUrlList = []\n    axios.post(\n        'http://localhost:3000/song/url',\n        {id: id}\n        ).then((value)=>{\n            musicUrlItem.id = value.data.data[0].id\n            musicUrlItem.url = value.data.data[0].url\n            musicUrlList.push({...musicUrlItem})\n            const action = {\n                type: 'set_music_url_list',\n                value: musicUrlList\n            }\n            store.dispatch(action)\n    })\n}\n\nexport const getMp3UrlByIds = (id) => {\n}\n\nexport const getSongDetail = (id) => {\n    const songItem = {\n        imageUrl: '',\n        artistName: '',\n        name: '',\n\n    }\n    axios.post(\n        'http://localhost:3000/song/detail',\n        {\n            ids: id\n        }\n    ).then((value) => {\n            const {...songdetail} = value.data\n            songItem.imageUrl = songdetail.songs[0].al.picUrl\n            songItem.name = songdetail.songs[0].name\n            songItem.artistName = songdetail.songs[0].ar[0].name\n            console.log('songdetail', songItem)\n        }\n    ).catch()\n}\n\nexport const getSongLryic = (id) => {\n    axios.post('http://localhost:3000/lyric',\n        {\n            id: id\n        }).then((value) => {\n        console.log('lryic', value)\n    }).catch()\n}"]},"metadata":{},"sourceType":"module"}