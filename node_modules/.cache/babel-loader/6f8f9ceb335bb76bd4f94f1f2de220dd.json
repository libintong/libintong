{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/playbar/index.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDuration = value => {\n      const time = value / 1000;\n      const min = Math.floor(time / 60);\n      min.toString().padStart(2, '0');\n      const sec = Math.floor(time % 60);\n      sec.toString().padStart(2, '0');\n      return `${min}:${sec}`;\n    };\n\n    this.nextSong = () => {};\n\n    this.preSong = () => {};\n\n    this.onPauseMusicClick = () => {\n      const action = {\n        type: 'change_isPlaying_false'\n      };\n      store.dispatch(action);\n      this.audio.current.pause();\n    };\n\n    this.onPlayMusicClick = () => {\n      const action = {\n        type: 'change_isPlaying_true'\n      };\n      store.dispatch(action);\n      this.audio.current.play();\n    };\n\n    this.audio = /*#__PURE__*/React.createRef();\n    this.state = store.getState();\n  }\n\n  componentDidMount() {\n    this.audio.current.onended = () => {\n      this.nextSong();\n    };\n  }\n\n  render() {\n    {\n      if (this.state.isPlaying) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playbar-audio\",\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              ref: this.audio,\n              src: this.props.mp3Url,\n              autoPlay: true // style={{visibility: \"hidden\"}}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playbar-img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.props.currentSongItem.imageUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playbar-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: this.props.currentSongItem.artistName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: this.props.currentSongItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playbar-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"00:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n              max: this.formatDuration(this.props.currentSongItem.duration),\n              value: 'currentTime'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: this.formatDuration(this.props.currentSongItem.duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playbar-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-shangyige\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), this.state.isPlaying ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-zanting\",\n              onClick: this.onPauseMusicClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 39\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-bofang\",\n              onClick: this.onPlayMusicClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-xiayige\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"playbar-lyrics\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont icon-geci\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this);\n      }\n    }\n  }\n\n}\n\nexport default PlayBar;","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/playbar/index.js"],"names":["React","Component","store","PlayBar","constructor","props","formatDuration","value","time","min","Math","floor","toString","padStart","sec","nextSong","preSong","onPauseMusicClick","action","type","dispatch","audio","current","pause","onPlayMusicClick","play","createRef","state","getState","componentDidMount","onended","render","isPlaying","mp3Url","currentSongItem","imageUrl","artistName","name","duration"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\n\nclass PlayBar extends Component {\n    constructor(props) {\n        super(props);\n        this.audio = React.createRef()\n        this.state = store.getState()\n    }\n\n    formatDuration = (value) => {\n        const time = value / 1000\n        const min = Math.floor(time / 60)\n        min.toString().padStart(2, '0')\n        const sec = Math.floor(time % 60)\n        sec.toString().padStart(2, '0')\n        return `${min}:${sec}`\n    }\n\n    componentDidMount() {\n        this.audio.current.onended = () => {\n            this.nextSong()\n        }\n    }\n\n    nextSong = () => {\n\n    }\n\n    preSong = () => {\n\n    }\n\n\n    onPauseMusicClick = () => {\n        const action = {\n            type: 'change_isPlaying_false',\n        }\n        store.dispatch(action)\n        this.audio.current.pause()\n    }\n\n    onPlayMusicClick = () => {\n        const action = {\n            type: 'change_isPlaying_true',\n        }\n        store.dispatch(action)\n        this.audio.current.play()\n    }\n\n    render() {\n        {\n            if (this.state.isPlaying) {\n                return (\n                    <div className=\"playbar\">\n                        <div className=\"playbar-audio\">\n                            <audio\n                                ref={this.audio}\n                                src={this.props.mp3Url}\n                                autoPlay={true}\n                                // style={{visibility: \"hidden\"}}\n                            >\n                            </audio>\n                        </div>\n                        <div className=\"playbar-img\">\n                            <img src={this.props.currentSongItem.imageUrl}/>\n                        </div>\n                        <div className=\"playbar-info\">\n                            <span>{this.props.currentSongItem.artistName}</span>\n                            <p>{this.props.currentSongItem.name}</p>\n                        </div>\n                        <div className=\"playbar-progress\">\n                            <label>00:00</label>\n                            <progress max={this.formatDuration(this.props.currentSongItem.duration)}\n                                      value={'currentTime'}></progress>\n                            <label>{this.formatDuration(this.props.currentSongItem.duration)}</label>\n                        </div>\n                        <div className=\"playbar-btn\">\n                            <i className=\"iconfont icon-shangyige\"></i>\n                            {\n                                this.state.isPlaying\n                                    ? <i\n                                        className=\"iconfont icon-zanting\"\n                                        onClick={this.onPauseMusicClick}\n                                    ></i>\n                                    : <i\n                                        className=\"iconfont icon-bofang\"\n                                        onClick={this.onPlayMusicClick}\n                                    ></i>\n                            }\n                            <i className=\"iconfont icon-xiayige\"></i>\n                        </div>\n                        <div className=\"playbar-lyrics\">\n                            <i className=\"iconfont icon-geci\"></i>\n                        </div>\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nexport default PlayBar;"]},"metadata":{},"sourceType":"module"}