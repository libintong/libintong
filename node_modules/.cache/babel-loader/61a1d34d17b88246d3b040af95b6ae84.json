{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/playbar/index.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport Audio from \"../audio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDuration = value => {\n      const time = value / 1000;\n      const min = Math.floor(time / 60);\n      min.toString().padStart(2, '0');\n      const sec = Math.floor(time % 60);\n      sec.toString().padStart(2, '0');\n      return `${min}:${sec}`;\n    };\n\n    this.onNextClick = () => {};\n\n    this.onPrevClick = () => {};\n\n    this.onShowLyricsClick = () => {\n      console.log('歌词');\n    };\n\n    this.state = store.getState();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.state.isPlaying) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playbar\",\n        children: [/*#__PURE__*/_jsxDEV(Audio, {\n          audioUrl: this.props.mp3Url,\n          imageUrl: this.props.currentSongItem.imageUrl,\n          artistName: this.props.currentSongItem.artistName,\n          name: this.props.currentSongItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playbar-lyrics\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont icon-geci\",\n            onClick: this.onShowLyricsClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default PlayBar; // play\n// animation: rotate 20s linear infinite\n// pause\n// animation-play-state: paused\n//\n// @keyframes rotate\n// 0%\n// transform: rotate(0)\n// 100%\n//     transform: rotate(360deg)","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/playbar/index.js"],"names":["React","Component","store","Audio","PlayBar","constructor","props","formatDuration","value","time","min","Math","floor","toString","padStart","sec","onNextClick","onPrevClick","onShowLyricsClick","console","log","state","getState","componentDidMount","render","isPlaying","mp3Url","currentSongItem","imageUrl","artistName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,iCAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,cALmB,GAKDC,KAAD,IAAW;AACxB,YAAMC,IAAI,GAAGD,KAAK,GAAG,IAArB;AACA,YAAME,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAZ;AACAC,MAAAA,GAAG,CAACG,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B;AACA,YAAMC,GAAG,GAAGJ,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAZ;AACAM,MAAAA,GAAG,CAACF,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B;AACA,aAAQ,GAAEJ,GAAI,IAAGK,GAAI,EAArB;AACH,KAZkB;;AAAA,SAiBnBC,WAjBmB,GAiBL,MAAM,CAEnB,CAnBkB;;AAAA,SAqBnBC,WArBmB,GAqBL,MAAM,CAEnB,CAvBkB;;AAAA,SAyBnBC,iBAzBmB,GAyBC,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KA3BkB;;AAEf,SAAKC,KAAL,GAAanB,KAAK,CAACoB,QAAN,EAAb;AACH;;AAWDC,EAAAA,iBAAiB,GAAG,CACnB;;AAcDC,EAAAA,MAAM,GAAG;AACD,QAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACtB,0BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWoB,MADzB;AAEI,UAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWqB,eAAX,CAA2BC,QAFzC;AAGI,UAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWqB,eAAX,CAA2BE,UAH3C;AAII,UAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWqB,eAAX,CAA2BG;AAJrC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAsBI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AACI,YAAA,SAAS,EAAC,oBADd;AAEI,YAAA,OAAO,EAAE,KAAKZ;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA+BH;AACJ;;AAhEuB;;AAmEhC,eAAed,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/playbar.css';\nimport store from '../../store';\nimport Audio from \"../audio\";\n\nclass PlayBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n    }\n\n    formatDuration = (value) => {\n        const time = value / 1000\n        const min = Math.floor(time / 60)\n        min.toString().padStart(2, '0')\n        const sec = Math.floor(time % 60)\n        sec.toString().padStart(2, '0')\n        return `${min}:${sec}`\n    }\n\n    componentDidMount() {\n    }\n\n    onNextClick = () => {\n\n    }\n\n    onPrevClick = () => {\n\n    }\n\n    onShowLyricsClick = () => {\n        console.log('歌词')\n    }\n\n    render() {\n            if (this.state.isPlaying) {\n                return (\n                    <div className=\"playbar\">\n                        <Audio\n                            audioUrl={this.props.mp3Url}\n                            imageUrl={this.props.currentSongItem.imageUrl}\n                            artistName={this.props.currentSongItem.artistName}\n                            name={this.props.currentSongItem.name}\n                        />\n                        {/*<div className=\"playbar-img\">*/}\n                        {/*    <img*/}\n                        {/*        className={}*/}\n                        {/*        src={this.props.currentSongItem.imageUrl}*/}\n                        {/*    />*/}\n                        {/*</div>*/}\n                        {/*<div className=\"playbar-info\">*/}\n                        {/*    <span>{this.props.currentSongItem.artistName}</span>*/}\n                        {/*    <p>{this.props.currentSongItem.name}</p>*/}\n                        {/*</div>*/}\n                        {/*<div className=\"playbar-progress\">*/}\n                        {/*    <Audio*/}\n                        {/*        audioUrl={this.props.mp3Url}*/}\n                        {/*    />*/}\n                        {/*</div>*/}\n                        <div className=\"playbar-lyrics\">\n                            <i\n                                className=\"iconfont icon-geci\"\n                                onClick={this.onShowLyricsClick}\n                            ></i>\n                        </div>\n                    </div>\n                )\n            }\n        }\n}\n\nexport default PlayBar;\n\n// play\n// animation: rotate 20s linear infinite\n// pause\n// animation-play-state: paused\n//\n// @keyframes rotate\n// 0%\n// transform: rotate(0)\n// 100%\n//     transform: rotate(360deg)\n"]},"metadata":{},"sourceType":"module"}