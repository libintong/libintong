{"ast":null,"code":"var _jsxFileName = \"/Users/heytea/lbt-music/src/components/playbar/11.js\";\nimport React, { Component } from \"react\";\nimport '../../statics/style/audioqq.css';\nimport store from \"../../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Audio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canplay = () => {\n      this.audio.current.oncanplay = () => {\n        var allTime = (Math.floor(this.audio.current.duration / 60) + \"\").padStart(2, \"0\") + \":\" + (Math.floor(this.audio.current.duration % 60) + \"\").padStart(2, \"0\");\n        this.setState({\n          allTime\n        });\n      };\n    };\n\n    this.timeUpdate = () => {\n      this.audio.current.ontimeupdate = () => {\n        // console.log(this.audio.current.currentTime)\n        // console.log(this.audio.current.duration)\n        var currentTime = (Math.floor(this.audio.current.currentTime / 60) + \"\").padStart(2, \"0\") + \":\" + (Math.floor(this.audio.current.currentTime % 60) + \"\").padStart(2, \"0\");\n        this.setState({\n          current: currentTime\n        });\n        this.inner.current.style.width = this.audio.current.currentTime / this.audio.current.duration * 100 + \"%\";\n      };\n    };\n\n    this.audioPlay = () => {\n      this.audio.current.play();\n    };\n\n    this.audioStop = () => {\n      this.audio.current.pause();\n    };\n\n    this.audioX = e => {\n      console.log('鼠标到可视区左侧的距离', e.targetTouches[0].clientX);\n      var outerWidth = this.outer.current.offsetWidth; //父元素宽\n\n      var innerWidth = e.targetTouches[0].clientX; //鼠标到左侧的距离\n\n      if (innerWidth > outerWidth || innerWidth < 0) {\n        return;\n      }\n\n      this.inner.current.style.width = innerWidth + \"px\";\n      this.audio.current.currentTime = innerWidth / outerWidth * this.audio.current.duration;\n    };\n\n    this.handleAudio = () => {\n      let audio = this.audio.current; // timeupdate,播放位置改变时触发\n\n      audio.addEventListener(\"timeupdate\", () => {\n        console.log(\"播放位置改变\");\n      }); // canplay,表示音频可以播放了，准备就绪\n\n      audio.addEventListener(\"canplay\", () => {\n        console.log(\"可以播放了\");\n      }); // progress，音频在加载或缓冲\n\n      audio.addEventListener(\"progress\", () => {\n        console.log(\"音频在加载或缓冲\");\n      }); // waiting,需要缓冲下一帧而停止播放时触发\n\n      audio.addEventListener(\"waiting\", () => {\n        console.log(\"需要缓冲下一帧\");\n      }); // playing,音频或视频已开始播放时触发\n\n      audio.addEventListener(\"playing\", () => {\n        console.log(\"开始播放\");\n      }); // pause,音频或视频文件暂停时触发\n\n      audio.addEventListener(\"pause\", () => {\n        console.log(\"已经暂停\");\n      });\n    };\n\n    this.state = store.getState();\n    this.outer = /*#__PURE__*/React.createRef(); //进度条外框\n\n    this.inner = /*#__PURE__*/React.createRef(); //进度条内核\n\n    this.audio = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    // console.log(this.audio);\n    this.canplay();\n    this.timeUpdate();\n    this.handleAudio();\n  } //在音频可以播放时就显示总时长\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u5F53\\u524D\\u65F6\\u95F4\\uFF1A\", this.state.current]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u603B\\u65F6\\u95F4\\uFF1A\", this.state.allTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outer\",\n        ref: this.outer,\n        onTouchMove: e => this.audioX(e),\n        onTouchStart: e => this.audioX(e),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          ref: this.inner,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"innerBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: this.audio,\n        src: this.props.mp3,\n        children: \"\\u4F60\\u7684\\u6D4F\\u89C8\\u5668\\u4E0D\\u652F\\u6301\\u97F3\\u9891\\u64AD\\u653E\\u54E6\\uFF01(;\\xB4\\u0F0E\\u0EB6\\u0414\\u0F0E\\u0EB6`)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.audioPlay(),\n        children: \"\\u64AD\\u653E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.audioStop(),\n        children: \"\\u6682\\u505C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Audio;","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/components/playbar/11.js"],"names":["React","Component","store","Audio","constructor","props","canplay","audio","current","oncanplay","allTime","Math","floor","duration","padStart","setState","timeUpdate","ontimeupdate","currentTime","inner","style","width","audioPlay","play","audioStop","pause","audioX","e","console","log","targetTouches","clientX","outerWidth","outer","offsetWidth","innerWidth","handleAudio","addEventListener","state","getState","createRef","componentDidMount","render","mp3"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport '../../statics/style/audioqq.css';\nimport store from \"../../store\";\n\nclass Audio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = store.getState()\n\n        this.outer = React.createRef(); //进度条外框\n        this.inner = React.createRef(); //进度条内核\n        this.audio = React.createRef();\n    }\n\n    componentDidMount() {\n        // console.log(this.audio);\n        this.canplay();\n        this.timeUpdate();\n        this.handleAudio();\n    }\n\n    //在音频可以播放时就显示总时长\n    canplay = () => {\n        this.audio.current.oncanplay = () => {\n            var allTime =\n                (Math.floor(this.audio.current.duration / 60) + \"\").padStart(2, \"0\") +\n                \":\" +\n                (Math.floor(this.audio.current.duration % 60) + \"\").padStart(2, \"0\");\n            this.setState({\n                allTime\n            });\n        };\n    }\n\n    //在音频播放时当前时间也跟着变化\n    timeUpdate = () => {\n        this.audio.current.ontimeupdate = () => {\n            // console.log(this.audio.current.currentTime)\n            // console.log(this.audio.current.duration)\n            var currentTime =\n                (Math.floor(this.audio.current.currentTime / 60) + \"\").padStart(2, \"0\")\n                + \":\" +\n                (Math.floor(this.audio.current.currentTime % 60) + \"\").padStart(2, \"0\");\n            this.setState({\n                current: currentTime\n            });\n            this.inner.current.style.width =\n                (this.audio.current.currentTime / this.audio.current.duration) * 100 +\n                \"%\";\n        };\n    }\n\n    //播放开始\n    audioPlay = () => {\n        this.audio.current.play();\n    }\n\n    //播放暂停\n    audioStop = () => {\n        this.audio.current.pause();\n    }\n\n\n    //设置播放进度\n    audioX = (e) => {\n        console.log('鼠标到可视区左侧的距离', e.targetTouches[0].clientX);\n        var outerWidth = this.outer.current.offsetWidth; //父元素宽\n        var innerWidth = e.targetTouches[0].clientX //鼠标到左侧的距离\n        if (innerWidth > outerWidth || innerWidth < 0) {\n            return;\n        }\n        this.inner.current.style.width = innerWidth + \"px\";\n        this.audio.current.currentTime =\n            (innerWidth / outerWidth) * this.audio.current.duration;\n    }\n\n    handleAudio = () => {\n        let audio = this.audio.current;\n        // timeupdate,播放位置改变时触发\n        audio.addEventListener(\"timeupdate\", () => {\n            console.log(\"播放位置改变\");\n        });\n        // canplay,表示音频可以播放了，准备就绪\n        audio.addEventListener(\"canplay\", () => {\n            console.log(\"可以播放了\");\n        });\n        // progress，音频在加载或缓冲\n        audio.addEventListener(\"progress\", () => {\n            console.log(\"音频在加载或缓冲\");\n        });\n        // waiting,需要缓冲下一帧而停止播放时触发\n        audio.addEventListener(\"waiting\", () => {\n            console.log(\"需要缓冲下一帧\");\n        });\n        // playing,音频或视频已开始播放时触发\n        audio.addEventListener(\"playing\", () => {\n            console.log(\"开始播放\");\n        });\n        // pause,音频或视频文件暂停时触发\n        audio.addEventListener(\"pause\", () => {\n            console.log(\"已经暂停\");\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>当前时间：{this.state.current}</h1>\n                <h1>总时间：{this.state.allTime}</h1>\n                <div\n                    className=\"outer\"\n                    ref={this.outer}\n                    onTouchMove={e => this.audioX(e)}\n                    onTouchStart={e => this.audioX(e)}\n                >\n                    <div className=\"inner\" ref={this.inner}>\n                        <div className=\"innerBtn\"></div>\n                    </div>\n                </div>\n                <br/>\n                <br/>\n                <br/>\n                <audio ref={this.audio} src={this.props.mp3}>\n                    你的浏览器不支持音频播放哦！(;´༎ຶД༎ຶ`)\n                </audio>\n                <button onClick={() => this.audioPlay()}>播放</button>\n                <button onClick={() => this.audioStop()}>暂停</button>\n            </div>\n        );\n    }\n}\n\nexport default Audio;"]},"metadata":{},"sourceType":"module"}