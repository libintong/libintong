{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../store\";\nconst storeValue = store.getState();\nexport const getLogin = () => {\n  axios.post('http://localhost:3000/login/cellphone', {\n    phone: storeValue.username,\n    password: storeValue.password\n  }).then(() => {}).catch(() => {});\n};\nexport const getBanner = () => {\n  axios.get('http://localhost:3000/banner?type=0').then(value => {\n    const { ...banners\n    } = value.data.banners;\n    const bannerImageUrl = [];\n\n    for (let i = 0; i < value.data.banners.length; i++) {\n      bannerImageUrl.push(banners[i].imageUrl);\n    }\n\n    const action = {\n      type: 'get_banner_list',\n      value: bannerImageUrl\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getBanner error', error);\n  });\n};\nexport const getNewsong = () => {\n  const newSongItem = {\n    id: '',\n    name: '',\n    imageUrl: ''\n  };\n  const newSongList = [];\n  axios.get('http://localhost:3000/personalized/newsong').then(value => {\n    for (let i = 0; i < value.data.result.length; i++) {\n      const { ...newsongData\n      } = value.data.result;\n      newSongItem.id = newsongData[i].id;\n      newSongItem.name = newsongData[i].name;\n      newSongItem.imageUrl = newsongData[i].picUrl;\n      newSongList.push({ ...newSongItem\n      });\n    } // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n    // 我这块自己这样写只能拿到一个，随机的id\n    // for (let j = 0; j < newSongList.length; j++) {\n    //     console.log(newSongList[j].id)\n    //     axios.post(\n    //         'http://localhost:3000/song/url',\n    //         {id: newSongList[j].id}\n    //     ).then((value) => {\n    //         console.log(value.data.data[0]);\n    //     }).catch(() => {\n    //\n    //     })\n    // }\n\n\n    const action = {\n      type: 'get_newsong_value',\n      value: newSongList\n    };\n    store.dispatch(action);\n  }).catch(error => {\n    console.log('getNewsong error', error);\n  });\n}; // 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }","map":{"version":3,"sources":["/Users/heytea/lbt-music/src/services/api.js"],"names":["axios","store","storeValue","getState","getLogin","post","phone","username","password","then","catch","getBanner","get","value","banners","data","bannerImageUrl","i","length","push","imageUrl","action","type","dispatch","error","console","log","getNewsong","newSongItem","id","name","newSongList","result","newsongData","picUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,MAAMC,UAAU,GAAGD,KAAK,CAACE,QAAN,EAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1BJ,EAAAA,KAAK,CAACK,IAAN,CACI,uCADJ,EAEI;AACQC,IAAAA,KAAK,EAAEJ,UAAU,CAACK,QAD1B;AAEQC,IAAAA,QAAQ,EAAEN,UAAU,CAACM;AAF7B,GAFJ,EAMKC,IANL,CAMU,MAAM,CAEX,CARL,EASKC,KATL,CASW,MAAM,CAEZ,CAXL;AAYH,CAbM;AAgBP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3BX,EAAAA,KAAK,CAACY,GAAN,CAAU,qCAAV,EACKH,IADL,CACWI,KAAD,IAAW;AACb,UAAM,EAAE,GAAGC;AAAL,QAAiBD,KAAK,CAACE,IAAN,CAAWD,OAAlC;AACA,UAAME,cAAc,GAAG,EAAvB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAGJ,KAAK,CAACE,IAAN,CAAWD,OAAX,CAAmBI,MAArC,EAA6CD,CAAC,EAA9C,EAAiD;AAC7CD,MAAAA,cAAc,CAACG,IAAf,CAAoBL,OAAO,CAACG,CAAD,CAAP,CAAWG,QAA/B;AACH;;AACD,UAAMC,MAAM,GAAE;AACVC,MAAAA,IAAI,EAAE,iBADI;AAEVT,MAAAA,KAAK,EAAEG;AAFG,KAAd;AAIAf,IAAAA,KAAK,CAACsB,QAAN,CAAeF,MAAf;AACH,GAZL,EAaKX,KAbL,CAaYc,KAAD,IAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACH,GAfL;AAgBH,CAjBM;AAoBP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC5B,QAAMC,WAAW,GAAG;AAChBC,IAAAA,EAAE,EAAE,EADY;AAEhBC,IAAAA,IAAI,EAAE,EAFU;AAGhBV,IAAAA,QAAQ,EAAE;AAHM,GAApB;AAKA,QAAMW,WAAW,GAAG,EAApB;AACA/B,EAAAA,KAAK,CAACY,GAAN,CAAU,4CAAV,EACKH,IADL,CACWI,KAAD,IAAU;AACZ,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACE,IAAN,CAAWiB,MAAX,CAAkBd,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,YAAM,EAAC,GAAGgB;AAAJ,UAAmBpB,KAAK,CAACE,IAAN,CAAWiB,MAApC;AACAJ,MAAAA,WAAW,CAACC,EAAZ,GAAiBI,WAAW,CAAChB,CAAD,CAAX,CAAeY,EAAhC;AACAD,MAAAA,WAAW,CAACE,IAAZ,GAAmBG,WAAW,CAAChB,CAAD,CAAX,CAAea,IAAlC;AACAF,MAAAA,WAAW,CAACR,QAAZ,GAAuBa,WAAW,CAAChB,CAAD,CAAX,CAAeiB,MAAtC;AACAH,MAAAA,WAAW,CAACZ,IAAZ,CAAiB,EAAC,GAAGS;AAAJ,OAAjB;AACH,KAPW,CAQZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMP,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE,mBADK;AAEXT,MAAAA,KAAK,EAAEkB;AAFI,KAAf;AAIA9B,IAAAA,KAAK,CAACsB,QAAN,CAAeF,MAAf;AACH,GA3BL,EA4BKX,KA5BL,CA4BYc,KAAD,IAAS;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AACH,GA9BL;AA+BH,CAtCM,C,CAwCP;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport store from \"../store\";\nconst storeValue = store.getState()\n\nexport const getLogin = () => {\n    axios.post(\n        'http://localhost:3000/login/cellphone',\n        {\n                phone: storeValue.username,\n                password: storeValue.password\n        })\n        .then(() => {\n\n        })\n        .catch(() => {\n\n        })\n}\n\n\nexport const getBanner = () => {\n    axios.get('http://localhost:3000/banner?type=0')\n        .then((value) => {\n            const { ...banners } = value.data.banners\n            const bannerImageUrl = []\n            for(let i=0 ; i < value.data.banners.length; i++){\n                bannerImageUrl.push(banners[i].imageUrl)\n            }\n            const action ={\n                type: 'get_banner_list',\n                value: bannerImageUrl\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getBanner error', error)\n        })\n}\n\n\nexport const getNewsong = () => {\n    const newSongItem = {\n        id: '',\n        name: '',\n        imageUrl: '',\n    }\n    const newSongList = []\n    axios.get('http://localhost:3000/personalized/newsong')\n        .then((value)=> {\n            for (let i = 0; i < value.data.result.length; i++) {\n                const {...newsongData} = value.data.result\n                newSongItem.id = newsongData[i].id;\n                newSongItem.name = newsongData[i].name;\n                newSongItem.imageUrl = newsongData[i].picUrl;\n                newSongList.push({...newSongItem})\n            }\n            // 这块怎么通过循环传id进去 调数组里每个id对应的mp3url\n            // 我这块自己这样写只能拿到一个，随机的id\n            // for (let j = 0; j < newSongList.length; j++) {\n            //     console.log(newSongList[j].id)\n            //     axios.post(\n            //         'http://localhost:3000/song/url',\n            //         {id: newSongList[j].id}\n            //     ).then((value) => {\n            //         console.log(value.data.data[0]);\n            //     }).catch(() => {\n            //\n            //     })\n            // }\n            const action = {\n                type: 'get_newsong_value',\n                value: newSongList\n            }\n            store.dispatch(action)\n        })\n        .catch((error)=>{\n            console.log('getNewsong error', error)\n        })\n}\n\n// 当我点击歌条的时候传对应的id进去 再去取mp3url\n// export const getSongUrlById = () => {\n// }\n"]},"metadata":{},"sourceType":"module"}